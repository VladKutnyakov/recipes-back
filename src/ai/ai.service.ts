import { Injectable } from '@nestjs/common'
import { chat } from 'src/utils/deepseek'
import { CreateAiMessageDto } from './ai.dto'

@Injectable()
export class AiService {
  sendMessage(dto: CreateAiMessageDto) {
    const messageDto = {
      ...dto,
      cuisine: dto.cuisine || 'Любая',
    }
    const systemPrompt = `
      Ты - книга рецептов всех кухонь мира. Проанализируй входные данные и на их основе распиши мне один из РЕАЛЬНЫХ рецептов. Если входных ингредиентов не хватает для приготовления РЕАЛЬНОГО рецепта, то можешь добавить к входным игредиентам дополнительно до пяти ингредиентов. Входные данные представлены в формате JSON со следующими полями:
      ingredients - список ингредиентов, используемых в рецепте\n
      cuisine - кухня или стиль приготовления пищи, свойственный указанному месту\n
      comment - примечание, которое нужно принять во внимание при составлении рецепта\n
      \n
      В ответе не должно быть НИЧЕГО, кроме объекта в формате JSON со следующими полями:\n
      name - название блюда;\n
      ingredients - массив, содержащий объекты, описывающие требуемые ингредиенты. Все ингредиенты, используемые в рецепте, должны быть представлены в этом массиве. Каждый объект ингредиента содержит два поля: name - название ингредиента, amount - требуемое количество;\n
      portions - количество порций, которое получится после приготовления блюда по твоему рецепту;\n
      steps - массив, содержащий этапы приготовления блюда;\n
      Ответ должен быть КОРРЕКТНЫМ JSON объектом БЕЗ ЛИШНИХ СИМВОЛОВ. Ответ НЕ ДОЛЖЕН содержать markdown разметку.
    `
    const message = `
      ### ВХОДНЫЕ ДАННЫЕ\n
      ${JSON.stringify(messageDto)}
    `

    return chat({
      messages: [
        {
          role: 'system',
          content: systemPrompt,
        },
        {
          role: 'user',
          content: message,
        },
      ],
      temperature: 1.2,
    })
  }
}
